/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: 
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef FILEDIALOGMANAGER_INTERFACE_H
#define FILEDIALOGMANAGER_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.deepin.filemanager.filedialogmanager
 */
class ComDeepinFilemanagerFiledialogmanagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.deepin.filemanager.filedialogmanager"; }

public:
    ComDeepinFilemanagerFiledialogmanagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComDeepinFilemanagerFiledialogmanagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QDBusObjectPath> createDialog(const QString &key)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(key);
        return asyncCallWithArgumentList(QStringLiteral("createDialog"), argumentList);
    }

    inline QDBusPendingReply<> destroyDialog(const QDBusObjectPath &path)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(path);
        return asyncCallWithArgumentList(QStringLiteral("destroyDialog"), argumentList);
    }

    inline QDBusPendingReply<QList<QDBusObjectPath> > dialogs()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("dialogs"), argumentList);
    }

    inline QDBusPendingReply<QString> errorString()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("errorString"), argumentList);
    }

    inline QDBusPendingReply<bool> isUseFileChooserDialog()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("isUseFileChooserDialog"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace deepin {
    namespace filemanager {
      typedef ::ComDeepinFilemanagerFiledialogmanagerInterface filedialogmanager;
    }
  }
}
#endif
